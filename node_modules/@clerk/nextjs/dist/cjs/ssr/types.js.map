{"version":3,"sources":["../../../src/ssr/types.ts"],"sourcesContent":["import type { AuthenticateRequestOptions, Organization, Session, User } from '@clerk/backend';\nimport type { ClerkJWTClaims, ServerSideAuth } from '@clerk/types';\nimport type { GetServerSidePropsContext } from 'next';\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type Awaited<T> = T extends PromiseLike<infer U> ? U : T;\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type WithServerSideAuthOptions = {\n  loadUser?: boolean;\n  loadSession?: boolean;\n  /**\n   * @deprecated use loadOrganization instead\n   */\n  loadOrg?: boolean;\n  loadOrganization?: boolean;\n  jwtKey?: string;\n  authorizedParties?: string[];\n  audience?: AuthenticateRequestOptions['audience'];\n};\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type WithServerSideAuthCallback<Return, Options extends WithServerSideAuthOptions> = (\n  context: ContextWithAuth<Options>,\n) => Return;\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type WithServerSideAuthResult<CallbackReturn> = (\n  context: GetServerSidePropsContext,\n) => Promise<Awaited<CallbackReturn>>;\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type AuthData = {\n  sessionId: string | null;\n  session: Session | undefined | null;\n  userId: string | null;\n  user: User | undefined | null;\n  organization: Organization | undefined | null;\n  getToken: (...args: any) => Promise<string | null>;\n  claims: ClerkJWTClaims | null;\n};\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type ContextWithAuth<Options extends WithServerSideAuthOptions = any> = GetServerSidePropsContext & {\n  req: RequestWithAuth<Options>;\n};\n\n/**\n * @deprecated The /middleware path is deprecated and will be removed in the next major release.\n * Use the exports from /server instead\n */\nexport type RequestWithAuth<Options extends WithServerSideAuthOptions = any> = GetServerSidePropsContext['req'] & {\n  auth: ServerSideAuth;\n} & (Options extends { loadSession: true } ? { session: Session | null } : {}) &\n  (Options extends { loadUser: true } ? { user: User | null } : {}) &\n  (Options extends { loadOrg: true } ? { organization: Organization | null } : {});\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}