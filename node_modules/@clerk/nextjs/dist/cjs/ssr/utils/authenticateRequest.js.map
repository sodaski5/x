{"version":3,"sources":["../../../../src/ssr/utils/authenticateRequest.ts"],"sourcesContent":["import type { GetServerSidePropsContext } from 'next';\n\nimport { API_KEY, clerkClient, FRONTEND_API, PROXY_URL, PUBLISHABLE_KEY, SECRET_KEY } from '../../server';\nimport type { WithServerSideAuthOptions } from '../types';\n\n/**\n * @internal\n */\nexport async function authenticateRequest(ctx: GetServerSidePropsContext, opts: WithServerSideAuthOptions = {}) {\n  const { headers, cookies } = ctx.req;\n\n  const cookieToken = cookies['__session'];\n  const headerToken = headers.authorization?.replace('Bearer ', '');\n\n  return clerkClient.authenticateRequest({\n    ...opts,\n    apiKey: API_KEY,\n    secretKey: SECRET_KEY,\n    frontendApi: FRONTEND_API,\n    publishableKey: PUBLISHABLE_KEY,\n    cookieToken,\n    headerToken,\n    clientUat: cookies['__client_uat'],\n    origin: headers.origin,\n    host: headers.host as string,\n    forwardedPort: headers['x-forwarded-port'] as string,\n    forwardedHost: headers['x-forwarded-host'] as string,\n    referrer: headers.referer,\n    userAgent: headers['user-agent'] as string,\n    proxyUrl: PROXY_URL,\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAA2F;AAM3F,eAAsB,oBAAoB,KAAgC,OAAkC,CAAC,GAAG;AAC9G,QAAM,EAAE,SAAS,QAAQ,IAAI,IAAI;AAEjC,QAAM,cAAc,QAAQ,WAAW;AACvC,QAAM,cAAc,QAAQ,eAAe,QAAQ,WAAW,EAAE;AAEhE,SAAO,0BAAY,oBAAoB;AAAA,IACrC,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA,WAAW,QAAQ,cAAc;AAAA,IACjC,QAAQ,QAAQ;AAAA,IAChB,MAAM,QAAQ;AAAA,IACd,eAAe,QAAQ,kBAAkB;AAAA,IACzC,eAAe,QAAQ,kBAAkB;AAAA,IACzC,UAAU,QAAQ;AAAA,IAClB,WAAW,QAAQ,YAAY;AAAA,IAC/B,UAAU;AAAA,EACZ,CAAC;AACH;","names":[]}