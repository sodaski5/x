{"version":3,"sources":["../../../src/api/requireAuth.ts"],"sourcesContent":["import type { ClerkMiddlewareOptions, RequireAuthProp } from '@clerk/clerk-sdk-node';\nimport { createClerkExpressRequireAuth } from '@clerk/clerk-sdk-node';\nimport type { NextApiHandler, NextApiRequest, NextApiResponse } from 'next';\n\nimport { API_URL, clerkClient, FRONTEND_API, PUBLISHABLE_KEY } from '../server';\nimport { runMiddleware } from './utils';\n\ntype NextApiHandlerRequireAuth<T = any> = (\n  req: RequireAuthProp<NextApiRequest>,\n  res: NextApiResponse<T>,\n) => void | Promise<void>;\n\nexport function requireAuth(handler: NextApiHandlerRequireAuth, options?: ClerkMiddlewareOptions): NextApiHandler {\n  return async (req, res) => {\n    try {\n      await runMiddleware(\n        req,\n        res,\n        createClerkExpressRequireAuth({\n          clerkClient,\n          apiUrl: API_URL,\n          frontendApi: FRONTEND_API,\n          publishableKey: PUBLISHABLE_KEY,\n        })(options),\n      );\n      return handler(req as RequireAuthProp<NextApiRequest>, res);\n    } catch (error) {\n      // @ts-ignore\n      const errorData = error.data || { error: error.message };\n      // @ts-ignore\n      res.statusCode = error.statusCode || 401;\n      /**\n       * Res.json is available in express-like environments.\n       * Res.send is available in express-like but also Fastify.\n       */\n      res.json ? res.json(errorData) : res.send(errorData);\n      res.end();\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAA8C;AAG9C,oBAAoE;AACpE,mBAA8B;AAOvB,SAAS,YAAY,SAAoC,SAAkD;AAChH,SAAO,OAAO,KAAK,QAAQ;AACzB,QAAI;AACF,gBAAM;AAAA,QACJ;AAAA,QACA;AAAA,YACA,qDAA8B;AAAA,UAC5B;AAAA,UACA,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,gBAAgB;AAAA,QAClB,CAAC,EAAE,OAAO;AAAA,MACZ;AACA,aAAO,QAAQ,KAAwC,GAAG;AAAA,IAC5D,SAAS,OAAP;AAEA,YAAM,YAAY,MAAM,QAAQ,EAAE,OAAO,MAAM,QAAQ;AAEvD,UAAI,aAAa,MAAM,cAAc;AAKrC,UAAI,OAAO,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS;AACnD,UAAI,IAAI;AAAA,IACV;AAAA,EACF;AACF;","names":[]}