{"version":3,"sources":["../../src/types.ts"],"sourcesContent":["import type { IsomorphicClerkOptions } from '@clerk/clerk-react';\nimport type { MultiDomainAndOrProxy, PublishableKeyOrFrontendApi } from '@clerk/types';\nimport type React from 'react';\n\nexport type NextClerkProviderProps = {\n  children: React.ReactNode;\n  /**\n   * If set to true, the NextJS middleware will be invoked\n   * every time the client-side auth state changes (sign-out, sign-in, organization switch etc.).\n   * That way, any auth-dependent logic can be placed inside the middleware.\n   * Example: Configuring the middleware to force a redirect to `/sign-in` when the user signs out\n   *\n   * @default true\n   */\n  __unstable_invokeMiddlewareOnAuthStateChange?: boolean;\n} & Omit<IsomorphicClerkOptions, keyof PublishableKeyOrFrontendApi> &\n  Partial<PublishableKeyOrFrontendApi> &\n  Omit<IsomorphicClerkOptions, keyof MultiDomainAndOrProxy> &\n  MultiDomainAndOrProxy;\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}