{"version":3,"sources":["../../../../src/pages/__tests__/index.test.tsx"],"sourcesContent":["import { expectTypeOf } from 'expect-type';\n\nimport type { ClerkProvider } from '../ClerkProvider';\n\ntype ClerkProviderProps = Parameters<typeof ClerkProvider>[0];\n\ndescribe('ClerkProvider', () => {\n  describe('Type tests', () => {\n    describe('publishableKey and frontendApi', () => {\n      it('expects children as the minimum accepted case', () => {\n        expectTypeOf({ children: '' }).toMatchTypeOf<ClerkProviderProps>();\n      });\n\n      it('publishable key is replaceable with frontendApi', () => {\n        expectTypeOf({ frontendApi: 'test', children: '' }).toMatchTypeOf<ClerkProviderProps>();\n      });\n\n      it('does not error if no publishableKey or frontendApi', () => {\n        expectTypeOf({ children: '' }).toMatchTypeOf<ClerkProviderProps>();\n      });\n    });\n  });\n\n  describe('Multi domain', () => {\n    const defaultProps = { children: '' };\n\n    it('proxyUrl (primary app)', () => {\n      expectTypeOf({ ...defaultProps, proxyUrl: 'test' }).toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('proxyUrl + isSatellite (satellite app)', () => {\n      expectTypeOf({ ...defaultProps, proxyUrl: 'test', isSatellite: true }).toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('domain + isSatellite (satellite app)', () => {\n      expectTypeOf({ ...defaultProps, domain: 'test', isSatellite: true }).toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('only domain is not allowed', () => {\n      expectTypeOf({ ...defaultProps, domain: 'test' }).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('only isSatellite is not allowed', () => {\n      expectTypeOf({ ...defaultProps, isSatellite: true }).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('proxyUrl + domain is not allowed', () => {\n      expectTypeOf({ ...defaultProps, proxyUrl: 'test', domain: 'test' }).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n\n    it('proxyUrl + domain + isSatellite is not allowed', () => {\n      expectTypeOf({\n        ...defaultProps,\n        proxyUrl: 'test',\n        domain: 'test',\n        isSatellite: true,\n      }).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n  });\n\n  describe('clerkJSVariant', () => {\n    const defaultProps = { children: '' };\n\n    it('is either headless or empty', () => {\n      expectTypeOf({ ...defaultProps, clerkJSVariant: 'headless' as const }).toMatchTypeOf<ClerkProviderProps>();\n      expectTypeOf({ ...defaultProps, clerkJSVariant: '' as const }).toMatchTypeOf<ClerkProviderProps>();\n      expectTypeOf({ ...defaultProps, clerkJSVariant: undefined }).toMatchTypeOf<ClerkProviderProps>();\n      expectTypeOf({ ...defaultProps, clerkJSVariant: 'test' }).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n  });\n\n  describe('children', () => {\n    it('errors if no children', () => {\n      expectTypeOf({}).not.toMatchTypeOf<ClerkProviderProps>();\n    });\n  });\n});\n"],"mappings":";AAAA,yBAA6B;AAM7B,SAAS,iBAAiB,MAAM;AAC9B,WAAS,cAAc,MAAM;AAC3B,aAAS,kCAAkC,MAAM;AAC/C,SAAG,iDAAiD,MAAM;AACxD,6CAAa,EAAE,UAAU,GAAG,CAAC,EAAE,cAAkC;AAAA,MACnE,CAAC;AAED,SAAG,mDAAmD,MAAM;AAC1D,6CAAa,EAAE,aAAa,QAAQ,UAAU,GAAG,CAAC,EAAE,cAAkC;AAAA,MACxF,CAAC;AAED,SAAG,sDAAsD,MAAM;AAC7D,6CAAa,EAAE,UAAU,GAAG,CAAC,EAAE,cAAkC;AAAA,MACnE,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AAED,WAAS,gBAAgB,MAAM;AAC7B,UAAM,eAAe,EAAE,UAAU,GAAG;AAEpC,OAAG,0BAA0B,MAAM;AACjC,2CAAa,EAAE,GAAG,cAAc,UAAU,OAAO,CAAC,EAAE,cAAkC;AAAA,IACxF,CAAC;AAED,OAAG,0CAA0C,MAAM;AACjD,2CAAa,EAAE,GAAG,cAAc,UAAU,QAAQ,aAAa,KAAK,CAAC,EAAE,cAAkC;AAAA,IAC3G,CAAC;AAED,OAAG,wCAAwC,MAAM;AAC/C,2CAAa,EAAE,GAAG,cAAc,QAAQ,QAAQ,aAAa,KAAK,CAAC,EAAE,cAAkC;AAAA,IACzG,CAAC;AAED,OAAG,8BAA8B,MAAM;AACrC,2CAAa,EAAE,GAAG,cAAc,QAAQ,OAAO,CAAC,EAAE,IAAI,cAAkC;AAAA,IAC1F,CAAC;AAED,OAAG,mCAAmC,MAAM;AAC1C,2CAAa,EAAE,GAAG,cAAc,aAAa,KAAK,CAAC,EAAE,IAAI,cAAkC;AAAA,IAC7F,CAAC;AAED,OAAG,oCAAoC,MAAM;AAC3C,2CAAa,EAAE,GAAG,cAAc,UAAU,QAAQ,QAAQ,OAAO,CAAC,EAAE,IAAI,cAAkC;AAAA,IAC5G,CAAC;AAED,OAAG,kDAAkD,MAAM;AACzD,2CAAa;AAAA,QACX,GAAG;AAAA,QACH,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,aAAa;AAAA,MACf,CAAC,EAAE,IAAI,cAAkC;AAAA,IAC3C,CAAC;AAAA,EACH,CAAC;AAED,WAAS,kBAAkB,MAAM;AAC/B,UAAM,eAAe,EAAE,UAAU,GAAG;AAEpC,OAAG,+BAA+B,MAAM;AACtC,2CAAa,EAAE,GAAG,cAAc,gBAAgB,WAAoB,CAAC,EAAE,cAAkC;AACzG,2CAAa,EAAE,GAAG,cAAc,gBAAgB,GAAY,CAAC,EAAE,cAAkC;AACjG,2CAAa,EAAE,GAAG,cAAc,gBAAgB,OAAU,CAAC,EAAE,cAAkC;AAC/F,2CAAa,EAAE,GAAG,cAAc,gBAAgB,OAAO,CAAC,EAAE,IAAI,cAAkC;AAAA,IAClG,CAAC;AAAA,EACH,CAAC;AAED,WAAS,YAAY,MAAM;AACzB,OAAG,yBAAyB,MAAM;AAChC,2CAAa,CAAC,CAAC,EAAE,IAAI,cAAkC;AAAA,IACzD,CAAC;AAAA,EACH,CAAC;AACH,CAAC;","names":[]}