{"version":3,"sources":["../../../../src/app-router/server/ClerkProvider.tsx"],"sourcesContent":["import type { IsomorphicClerkOptions } from '@clerk/clerk-react';\nimport type { InitialState, PublishableKeyOrFrontendApi } from '@clerk/types';\nimport React from 'react';\n\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { ClientClerkProvider } from '../client/ClerkProvider';\nimport { initialState } from './auth';\n\ntype NextAppClerkProviderProps = React.PropsWithChildren<\n  Omit<IsomorphicClerkOptions, keyof PublishableKeyOrFrontendApi> & Partial<PublishableKeyOrFrontendApi>\n>;\n\nexport function ClerkProvider(props: NextAppClerkProviderProps) {\n  const { children, ...rest } = props;\n  const state = initialState()?.__clerk_ssr_state as InitialState;\n\n  return (\n    <ClientClerkProvider\n      {...mergeNextClerkPropsWithEnv(rest)}\n      // @ts-ignore\n      initialState={state}\n    >\n      {children}\n    </ClientClerkProvider>\n  );\n}\n"],"mappings":"AAEA,OAAO,WAAW;AAElB,SAAS,kCAAkC;AAC3C,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAMtB,SAAS,cAAc,OAAkC;AAC9D,QAAM,EAAE,UAAU,GAAG,KAAK,IAAI;AAC9B,QAAM,QAAQ,aAAa,GAAG;AAE9B,SACE;AAAA,IAAC;AAAA;AAAA,MACE,GAAG,2BAA2B,IAAI;AAAA,MAEnC,cAAc;AAAA;AAAA,IAEb;AAAA,EACH;AAEJ;","names":[]}