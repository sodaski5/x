{"version":3,"sources":["../../../src/server/authenticateRequest.ts"],"sourcesContent":["import type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport type { RequestState } from './clerkClient';\nimport {\n  API_KEY,\n  CLERK_JS_URL,\n  CLERK_JS_VERSION,\n  clerkClient,\n  debugRequestState,\n  FRONTEND_API,\n  PUBLISHABLE_KEY,\n  SECRET_KEY,\n} from './clerkClient';\nimport type { WithAuthOptions } from './types';\nimport { apiEndpointUnauthorizedNextResponse, handleMultiDomainAndProxy } from './utils';\nimport { decorateResponseWithObservabilityHeaders } from './withClerkMiddleware';\n\nexport const authenticateRequest = async (req: NextRequest, opts: WithAuthOptions) => {\n  const { isSatellite, domain, signInUrl, proxyUrl } = handleMultiDomainAndProxy(req, opts);\n  return await clerkClient.authenticateRequest({\n    ...opts,\n    apiKey: opts.apiKey || API_KEY,\n    secretKey: opts.secretKey || SECRET_KEY,\n    frontendApi: opts.frontendApi || FRONTEND_API,\n    publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n    isSatellite,\n    domain,\n    signInUrl,\n    proxyUrl,\n    request: req,\n  });\n};\n\nexport const handleUnknownState = (requestState: RequestState) => {\n  const response = apiEndpointUnauthorizedNextResponse();\n  decorateResponseWithObservabilityHeaders(response, requestState);\n  return response;\n};\n\nexport const handleInterstitialState = (requestState: RequestState, opts: WithAuthOptions) => {\n  const response = new NextResponse(\n    clerkClient.localInterstitial({\n      frontendApi: opts.frontendApi || FRONTEND_API,\n      publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n      clerkJSUrl: CLERK_JS_URL,\n      clerkJSVersion: CLERK_JS_VERSION,\n      proxyUrl: requestState.proxyUrl,\n      isSatellite: requestState.isSatellite,\n      domain: requestState.domain,\n      debugData: debugRequestState(requestState),\n      signInUrl: requestState.signInUrl,\n    }),\n    {\n      status: 401,\n      headers: {\n        'content-type': 'text/html',\n      },\n    },\n  );\n  decorateResponseWithObservabilityHeaders(response, requestState);\n  return response;\n};\n"],"mappings":"AACA,SAAS,oBAAoB;AAG7B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,SAAS,qCAAqC,iCAAiC;AAC/E,SAAS,gDAAgD;AAElD,MAAM,sBAAsB,OAAO,KAAkB,SAA0B;AACpF,QAAM,EAAE,aAAa,QAAQ,WAAW,SAAS,IAAI,0BAA0B,KAAK,IAAI;AACxF,SAAO,MAAM,YAAY,oBAAoB;AAAA,IAC3C,GAAG;AAAA,IACH,QAAQ,KAAK,UAAU;AAAA,IACvB,WAAW,KAAK,aAAa;AAAA,IAC7B,aAAa,KAAK,eAAe;AAAA,IACjC,gBAAgB,KAAK,kBAAkB;AAAA,IACvC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AACH;AAEO,MAAM,qBAAqB,CAAC,iBAA+B;AAChE,QAAM,WAAW,oCAAoC;AACrD,2CAAyC,UAAU,YAAY;AAC/D,SAAO;AACT;AAEO,MAAM,0BAA0B,CAAC,cAA4B,SAA0B;AAC5F,QAAM,WAAW,IAAI;AAAA,IACnB,YAAY,kBAAkB;AAAA,MAC5B,aAAa,KAAK,eAAe;AAAA,MACjC,gBAAgB,KAAK,kBAAkB;AAAA,MACvC,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,UAAU,aAAa;AAAA,MACvB,aAAa,aAAa;AAAA,MAC1B,QAAQ,aAAa;AAAA,MACrB,WAAW,kBAAkB,YAAY;AAAA,MACzC,WAAW,aAAa;AAAA,IAC1B,CAAC;AAAA,IACD;AAAA,MACE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AACA,2CAAyC,UAAU,YAAY;AAC/D,SAAO;AACT;","names":[]}