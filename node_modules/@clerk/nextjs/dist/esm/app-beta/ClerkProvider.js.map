{"version":3,"sources":["../../../src/app-beta/ClerkProvider.tsx"],"sourcesContent":["import type { IsomorphicClerkOptions } from '@clerk/clerk-react';\nimport type { InitialState, PublishableKeyOrFrontendApi } from '@clerk/types';\nimport React from 'react';\n\nimport { initialState } from './auth';\nimport { ClerkProvider as ClerkProviderClient } from './client/ClerkProvider';\n\ntype NextAppClerkProviderProps = {\n  children: React.ReactNode;\n} & Omit<IsomorphicClerkOptions, keyof PublishableKeyOrFrontendApi> &\n  Partial<PublishableKeyOrFrontendApi>;\n\nexport function ClerkProvider(props: NextAppClerkProviderProps) {\n  const state = (initialState()?.__clerk_ssr_state || { sessionId: null, orgId: null, userId: null }) as InitialState;\n  return (\n    // @ts-expect-error\n    <ClerkProviderClient\n      frontendApi={process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || ''}\n      publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || ''}\n      proxyUrl={process.env.NEXT_PUBLIC_CLERK_PROXY_URL}\n      initialState={state}\n      {...props}\n    />\n  );\n}\n"],"mappings":"AAEA,OAAO,WAAW;AAElB,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB,2BAA2B;AAO9C,SAAS,cAAc,OAAkC;AAC9D,QAAM,QAAS,aAAa,GAAG,qBAAqB,EAAE,WAAW,MAAM,OAAO,MAAM,QAAQ,KAAK;AACjG;AAAA;AAAA,IAEE;AAAA,MAAC;AAAA;AAAA,QACC,aAAa,QAAQ,IAAI,kCAAkC;AAAA,QAC3D,gBAAgB,QAAQ,IAAI,qCAAqC;AAAA,QACjE,UAAU,QAAQ,IAAI;AAAA,QACtB,cAAc;AAAA,QACb,GAAG;AAAA;AAAA,IACN;AAAA;AAEJ;","names":[]}