import type { ApiClient } from '../api';
import type { LoadInterstitialOptions } from './interstitial';
import { buildPublicInterstitialUrl } from './interstitial';
import type { AuthenticateRequestOptions } from './request';
export type CreateAuthenticateRequestOptions = {
    options: Partial<Pick<AuthenticateRequestOptions, 'audience' | 'apiKey' | 'secretKey' | 'apiUrl' | 'apiVersion' | 'frontendApi' | 'publishableKey' | 'jwtKey' | 'proxyUrl' | 'domain' | 'isSatellite'>>;
    apiClient: ApiClient;
};
export declare function createAuthenticateRequest(params: CreateAuthenticateRequestOptions): {
    authenticateRequest: ({ apiKey: runtimeApiKey, secretKey: runtimeSecretKey, audience: runtimeAudience, frontendApi: runtimeFrontendApi, proxyUrl: runtimeProxyUrl, publishableKey: runtimePublishableKey, jwtKey: runtimeJwtKey, isSatellite: runtimeIsSatellite, domain: runtimeDomain, searchParams, ...rest }: Omit<AuthenticateRequestOptions, 'apiUrl' | 'apiVersion'>) => Promise<import("./authStatus").RequestState>;
    localInterstitial: ({ frontendApi: runtimeFrontendApi, publishableKey: runtimePublishableKey, proxyUrl: runtimeProxyUrl, isSatellite: runtimeIsSatellite, domain: runtimeDomain, ...rest }: Omit<LoadInterstitialOptions, 'apiUrl'>) => string;
    remotePublicInterstitial: ({ frontendApi: runtimeFrontendApi, publishableKey: runtimePublishableKey, proxyUrl: runtimeProxyUrl, isSatellite: runtimeIsSatellite, domain: runtimeDomain, ...rest }: LoadInterstitialOptions) => Promise<string>;
    remotePrivateInterstitial: () => Promise<string>;
    remotePublicInterstitialUrl: typeof buildPublicInterstitialUrl;
    debugRequestState: (params: import("./authStatus").RequestState) => {
        frontendApi: string;
        isSignedIn: boolean;
        proxyUrl: string | undefined;
        isInterstitial: boolean;
        reason: import("./authStatus").AuthReason | null;
        message: string | null;
        publishableKey: string;
        isSatellite: boolean;
        domain: string;
    };
};
//# sourceMappingURL=factory.d.ts.map