import type { RequestState } from './authStatus';
import type { VerifyTokenOptions } from './verify';
export type LoadResourcesOptions = {
    loadSession?: boolean;
    loadUser?: boolean;
    loadOrganization?: boolean;
};
export type RequiredVerifyTokenOptions = Required<Pick<VerifyTokenOptions, 'apiKey' | 'secretKey' | 'apiUrl' | 'apiVersion'>>;
export type OptionalVerifyTokenOptions = Partial<Pick<VerifyTokenOptions, 'audience' | 'authorizedParties' | 'clockSkewInSeconds' | 'clockSkewInMs' | 'jwksCacheTtlInMs' | 'skipJwksCache' | 'jwtKey'>>;
export type AuthenticateRequestOptions = OptionalVerifyTokenOptions & LoadResourcesOptions & {
    publishableKey?: string;
    secretKey?: string;
    /**
     * @deprecated Use `publishableKey` instead.
     */
    frontendApi?: string;
    /**
     * @deprecated Use `secretKey` instead.
     */
    apiKey?: string;
    apiVersion?: string;
    apiUrl?: string;
    cookieToken?: string;
    clientUat?: string;
    headerToken?: string;
    origin?: string;
    host?: string;
    forwardedHost?: string;
    forwardedPort?: string;
    forwardedProto?: string;
    referrer?: string;
    userAgent?: string;
    /**
     * @experimental
     */
    domain?: string;
    /**
     * @experimental
     */
    isSatellite?: boolean;
    /**
     * @experimental
     */
    proxyUrl?: string;
    /**
     * @experimental
     */
    searchParams?: URLSearchParams;
    /**
     * @experimental
     */
    signInUrl?: string;
    request?: Request;
};
export declare function authenticateRequest(options: AuthenticateRequestOptions): Promise<RequestState>;
export declare const debugRequestState: (params: RequestState) => {
    frontendApi: string;
    isSignedIn: boolean;
    proxyUrl: string | undefined;
    isInterstitial: boolean;
    reason: import("./authStatus").AuthReason | null;
    message: string | null;
    publishableKey: string;
    isSatellite: boolean;
    domain: string;
};
export type DebugRequestSate = ReturnType<typeof debugRequestState>;
//# sourceMappingURL=request.d.ts.map