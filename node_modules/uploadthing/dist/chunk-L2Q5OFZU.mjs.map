{"version":3,"sources":["../src/internal/next/approuter.ts","../src/next.ts"],"sourcesContent":["import { getStatusCodeFromError, UploadThingError } from \"@uploadthing/shared\";\n\nimport { UPLOADTHING_VERSION } from \"../../constants\";\nimport { defaultErrorFormatter } from \"../error-formatter\";\nimport type { RouterWithConfig } from \"../handler\";\nimport { buildPermissionsInfoHandler, buildRequestHandler } from \"../handler\";\nimport type { FileRouter, inferErrorShape } from \"../types\";\n\nexport const createNextRouteHandler = <TRouter extends FileRouter>(\n  opts: RouterWithConfig<TRouter>,\n) => {\n  const requestHandler = buildRequestHandler<TRouter, \"app\">(opts);\n\n  const POST = async (req: Request) => {\n    const response = await requestHandler({ req });\n    const errorFormatter =\n      opts.router[Object.keys(opts.router)[0]]?._def.errorFormatter ??\n      defaultErrorFormatter;\n\n    if (response instanceof UploadThingError) {\n      const formattedError = errorFormatter(\n        response,\n      ) as inferErrorShape<TRouter>;\n      return new Response(JSON.stringify(formattedError), {\n        status: getStatusCodeFromError(response),\n        headers: {\n          \"x-uploadthing-version\": UPLOADTHING_VERSION,\n        },\n      });\n    }\n    if (response.status !== 200) {\n      // We messed up - this should never happen\n      return new Response(\"An unknown error occured\", {\n        status: 500,\n        headers: {\n          \"x-uploadthing-version\": UPLOADTHING_VERSION,\n        },\n      });\n    }\n\n    return new Response(JSON.stringify(response.body), {\n      status: response.status,\n      headers: {\n        \"x-uploadthing-version\": UPLOADTHING_VERSION,\n      },\n    });\n  };\n\n  const getBuildPerms = buildPermissionsInfoHandler<TRouter>(opts);\n\n  const GET = () => {\n    return new Response(JSON.stringify(getBuildPerms()), {\n      status: 200,\n      headers: {\n        \"x-uploadthing-version\": UPLOADTHING_VERSION,\n      },\n    });\n  };\n\n  return { GET, POST };\n};\n","import type { Json } from \"@uploadthing/shared\";\n\nimport type { CreateBuilderOptions } from \"./internal/upload-builder\";\nimport { createBuilder } from \"./internal/upload-builder\";\n\nexport { createNextRouteHandler } from \"./internal/next/approuter\";\nexport type { FileRouter } from \"./internal/types\";\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<\"app\", TErrorShape>(opts);\n"],"mappings":";;;;;;;;;AAAA,SAAS,wBAAwB,wBAAwB;AAQlD,IAAM,yBAAyB,CACpC,SACG;AACH,QAAM,iBAAiB,oBAAoC,IAAI;AAE/D,QAAM,OAAO,OAAO,QAAiB;AAbvC;AAcI,UAAM,WAAW,MAAM,eAAe,EAAE,IAAI,CAAC;AAC7C,UAAM,mBACJ,UAAK,OAAO,OAAO,KAAK,KAAK,MAAM,EAAE,CAAC,CAAC,MAAvC,mBAA0C,KAAK,mBAC/C;AAEF,QAAI,oBAAoB,kBAAkB;AACxC,YAAM,iBAAiB;AAAA,QACrB;AAAA,MACF;AACA,aAAO,IAAI,SAAS,KAAK,UAAU,cAAc,GAAG;AAAA,QAClD,QAAQ,uBAAuB,QAAQ;AAAA,QACvC,SAAS;AAAA,UACP,yBAAyB;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,SAAS,WAAW,KAAK;AAE3B,aAAO,IAAI,SAAS,4BAA4B;AAAA,QAC9C,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,yBAAyB;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,SAAS,IAAI,GAAG;AAAA,MACjD,QAAQ,SAAS;AAAA,MACjB,SAAS;AAAA,QACP,yBAAyB;AAAA,MAC3B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,QAAM,gBAAgB,4BAAqC,IAAI;AAE/D,QAAM,MAAM,MAAM;AAChB,WAAO,IAAI,SAAS,KAAK,UAAU,cAAc,CAAC,GAAG;AAAA,MACnD,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,yBAAyB;AAAA,MAC3B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO,EAAE,KAAK,KAAK;AACrB;;;ACpDO,IAAM,oBAAoB,CAC/B,SACG,cAAkC,IAAI;","names":[]}