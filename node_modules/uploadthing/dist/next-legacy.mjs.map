{"version":3,"sources":["../src/internal/next/pagerouter.ts","../src/next-legacy.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from \"next\";\n\nimport { getStatusCodeFromError, UploadThingError } from \"@uploadthing/shared\";\n\nimport { UPLOADTHING_VERSION } from \"../../constants\";\nimport { defaultErrorFormatter } from \"../error-formatter\";\nimport type { RouterWithConfig } from \"../handler\";\nimport { buildPermissionsInfoHandler, buildRequestHandler } from \"../handler\";\nimport type { FileRouter, inferErrorShape } from \"../types\";\n\nexport const createNextPageApiHandler = <TRouter extends FileRouter>(\n  opts: RouterWithConfig<TRouter>,\n) => {\n  const requestHandler = buildRequestHandler<TRouter, \"pages\">(opts);\n  const errorFormatter =\n    opts.router[Object.keys(opts.router)[0]]?._def.errorFormatter ??\n    defaultErrorFormatter;\n\n  const getBuildPerms = buildPermissionsInfoHandler<TRouter>(opts);\n\n  return async (req: NextApiRequest, res: NextApiResponse) => {\n    // Return valid endpoints\n    if (req.method === \"GET\") {\n      const perms = getBuildPerms();\n      res.status(200).json(perms);\n      return;\n    }\n\n    const standardRequest = {\n      ...req,\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      json: () => Promise.resolve(JSON.parse(req.body)),\n      headers: {\n        get: (key: string) => req.headers[key],\n      } as Headers,\n    };\n\n    const response = await requestHandler({\n      req: standardRequest,\n      res,\n    });\n\n    res.setHeader(\"x-uploadthing-version\", UPLOADTHING_VERSION);\n\n    if (response instanceof UploadThingError) {\n      res.status(getStatusCodeFromError(response));\n      res.setHeader(\"x-uploadthing-version\", UPLOADTHING_VERSION);\n      const formattedError = errorFormatter(\n        response,\n      ) as inferErrorShape<TRouter>;\n      return res.json(formattedError);\n    }\n\n    if (response.status !== 200) {\n      // We messed up - this should never happen\n      res.status(500);\n      return res.send(\"An unknown error occured\");\n    }\n\n    res.status(response.status);\n    return res.json(response.body);\n  };\n};\n","import type { Json } from \"@uploadthing/shared\";\n\nimport type { CreateBuilderOptions } from \"./internal/upload-builder\";\nimport { createBuilder } from \"./internal/upload-builder\";\n\nexport { createNextPageApiHandler } from \"./internal/next/pagerouter\";\nexport type { FileRouter } from \"./internal/types\";\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<\"pages\", TErrorShape>(opts);\n"],"mappings":";;;;;;;;;;AAEA,SAAS,wBAAwB,wBAAwB;AAQlD,IAAM,2BAA2B,CACtC,SACG;AAZL;AAaE,QAAM,iBAAiB,oBAAsC,IAAI;AACjE,QAAM,mBACJ,UAAK,OAAO,OAAO,KAAK,KAAK,MAAM,EAAE,CAAC,CAAC,MAAvC,mBAA0C,KAAK,mBAC/C;AAEF,QAAM,gBAAgB,4BAAqC,IAAI;AAE/D,SAAO,OAAO,KAAqB,QAAyB;AAE1D,QAAI,IAAI,WAAW,OAAO;AACxB,YAAM,QAAQ,cAAc;AAC5B,UAAI,OAAO,GAAG,EAAE,KAAK,KAAK;AAC1B;AAAA,IACF;AAEA,UAAM,kBAAkB;AAAA,MACtB,GAAG;AAAA;AAAA,MAEH,MAAM,MAAM,QAAQ,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC;AAAA,MAChD,SAAS;AAAA,QACP,KAAK,CAAC,QAAgB,IAAI,QAAQ,GAAG;AAAA,MACvC;AAAA,IACF;AAEA,UAAM,WAAW,MAAM,eAAe;AAAA,MACpC,KAAK;AAAA,MACL;AAAA,IACF,CAAC;AAED,QAAI,UAAU,yBAAyB,mBAAmB;AAE1D,QAAI,oBAAoB,kBAAkB;AACxC,UAAI,OAAO,uBAAuB,QAAQ,CAAC;AAC3C,UAAI,UAAU,yBAAyB,mBAAmB;AAC1D,YAAM,iBAAiB;AAAA,QACrB;AAAA,MACF;AACA,aAAO,IAAI,KAAK,cAAc;AAAA,IAChC;AAEA,QAAI,SAAS,WAAW,KAAK;AAE3B,UAAI,OAAO,GAAG;AACd,aAAO,IAAI,KAAK,0BAA0B;AAAA,IAC5C;AAEA,QAAI,OAAO,SAAS,MAAM;AAC1B,WAAO,IAAI,KAAK,SAAS,IAAI;AAAA,EAC/B;AACF;;;ACtDO,IAAM,oBAAoB,CAC/B,SACG,cAAoC,IAAI;","names":[]}