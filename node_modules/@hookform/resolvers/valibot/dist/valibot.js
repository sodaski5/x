var r=require("@hookform/resolvers"),e=require("valibot"),t=function(r){var e=r.issues.reduce(function(r,e){if(e.path){var t=e.path.map(function(r){return r.key}).join(".");r[t]=[].concat(r[t]||[],[{message:e.message,type:e.validation}])}return r},{});return Object.entries(e).reduce(function(r,e){var t=e[1][0];return r[e[0]]={message:t.message,type:t.type},r},{})};exports.valibotResolver=function(n,o,s){return void 0===o&&(o={abortEarly:!1,abortPipeEarly:!1}),void 0===s&&(s={mode:"async",raw:!1}),function(a,i,u){try{return Promise.resolve(function(r,t){try{var i=function(){function r(r){return{values:i?a:r,errors:{}}}var t=s.mode,i=s.raw;return"sync"===t?r("sync"===t?e.parse(n,a,o):e.parseAsync(n,a,o)):Promise.resolve("sync"===t?e.parse(n,a,o):e.parseAsync(n,a,o)).then(r)}()}catch(r){return t(r)}return i&&i.then?i.then(void 0,t):i}(0,function(n){if(n instanceof e.ValiError)return{values:{},errors:r.toNestError(t(n),u)};throw n}))}catch(r){return Promise.reject(r)}}};
//# sourceMappingURL=valibot.js.map
