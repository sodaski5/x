import{toNestError as e}from"@hookform/resolvers";import{parse as r,parseAsync as t,ValiError as s}from"valibot";const o=e=>{const r=e.issues.reduce((e,r)=>{if(r.path){const t=r.path.map(({key:e})=>e).join(".");e[t]=[...e[t]||[],{message:r.message,type:r.validation}]}return e},{});return Object.entries(r).reduce((e,[r,t])=>{const[s]=t;return e[r]={message:s.message,type:s.type},e},{})},a=(a,n={abortEarly:!1,abortPipeEarly:!1},c={mode:"async",raw:!1})=>async(i,m,p)=>{try{const{mode:e,raw:s}=c,o="sync"===e?r(a,i,n):await t(a,i,n);return{values:s?i:o,errors:{}}}catch(r){if(r instanceof s)return{values:{},errors:e(o(r),p)};throw r}};export{a as valibotResolver};
//# sourceMappingURL=valibot.modern.mjs.map
