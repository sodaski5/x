{"version":3,"sources":["../src/component.tsx"],"sourcesContent":["import { useCallback, useRef, useState } from \"react\";\nimport type { FileWithPath } from \"react-dropzone\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport type {\n  ExpandedRouteConfig,\n  UploadThingError,\n} from \"@uploadthing/shared\";\nimport type { UploadFileResponse } from \"uploadthing/client\";\nimport {\n  classNames,\n  generateClientDropzoneAccept,\n  generateMimeTypes,\n} from \"uploadthing/client\";\nimport type {\n  ErrorMessage,\n  FileRouter,\n  inferEndpointInput,\n  inferErrorShape,\n} from \"uploadthing/server\";\n\nimport { INTERNAL_uploadthingHookGen } from \"./useUploadThing\";\n\nconst generatePermittedFileTypes = (config?: ExpandedRouteConfig) => {\n  const fileTypes = config ? Object.keys(config) : [];\n\n  const maxFileCount = config\n    ? Object.values(config).map((v) => v.maxFileCount)\n    : [];\n\n  return { fileTypes, multiple: maxFileCount.some((v) => v && v > 1) };\n};\n\nconst capitalizeStart = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nconst INTERNAL_doFormatting = (config?: ExpandedRouteConfig): string => {\n  if (!config) return \"\";\n\n  const allowedTypes = Object.keys(config) as (keyof ExpandedRouteConfig)[];\n\n  const formattedTypes = allowedTypes.map((f) => {\n    if (f.includes(\"/\")) return `${f.split(\"/\")[1].toUpperCase()} file`;\n    return f === \"blob\" ? \"file\" : f;\n  });\n\n  // Format multi-type uploader label as \"Supports videos, images and files\";\n  if (formattedTypes.length > 1) {\n    const lastType = formattedTypes.pop();\n    return `${formattedTypes.join(\"s, \")} and ${lastType}s`;\n  }\n\n  // Single type uploader label\n  const key = allowedTypes[0];\n  const formattedKey = formattedTypes[0];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { maxFileSize, maxFileCount } = config[key]!;\n\n  if (maxFileCount && maxFileCount > 1) {\n    return `${formattedKey}s up to ${maxFileSize}, max ${maxFileCount}`;\n  } else {\n    return `${formattedKey} (${maxFileSize})`;\n  }\n};\n\nconst allowedContentTextLabelGenerator = (\n  config?: ExpandedRouteConfig,\n): string => {\n  return capitalizeStart(INTERNAL_doFormatting(config));\n};\n\nexport type UploadthingComponentProps<TRouter extends FileRouter> = {\n  [TEndpoint in keyof TRouter]: {\n    endpoint: TEndpoint;\n\n    onUploadProgress?: (progress: number) => void;\n    onClientUploadComplete?: (res?: UploadFileResponse[]) => void;\n    onUploadError?: (error: UploadThingError<inferErrorShape<TRouter>>) => void;\n  } & (undefined extends inferEndpointInput<TRouter[TEndpoint]>\n    ? {}\n    : {\n        input: inferEndpointInput<TRouter[TEndpoint]>;\n      });\n}[keyof TRouter];\n\nconst progressHeights: { [key: number]: string } = {\n  0: \"after:ut-w-0\",\n  10: \"after:ut-w-[10%]\",\n  20: \"after:ut-w-[20%]\",\n  30: \"after:ut-w-[30%]\",\n  40: \"after:ut-w-[40%]\",\n  50: \"after:ut-w-[50%]\",\n  60: \"after:ut-w-[60%]\",\n  70: \"after:ut-w-[70%]\",\n  80: \"after:ut-w-[80%]\",\n  90: \"after:ut-w-[90%]\",\n  100: \"after:ut-w-[100%]\",\n};\n\n/**\n * @example\n * <UploadButton<OurFileRouter>\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */\nexport function UploadButton<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as UploadthingComponentProps<TRouter>;\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>();\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n    },\n  );\n\n  const { fileTypes, multiple } = generatePermittedFileTypes(\n    permittedFileInfo?.config,\n  );\n\n  const ready = fileTypes.length > 0;\n\n  const getUploadButtonText = (fileTypes: string[]) => {\n    if (!(fileTypes.length > 0)) return \"Loading...\";\n    return `Choose File${multiple ? `(s)` : ``}`;\n  };\n\n  return (\n    <div className=\"ut-flex ut-flex-col ut-items-center ut-justify-center ut-gap-1\">\n      <label\n        className={classNames(\n          \"ut-relative ut-flex ut-h-10 ut-w-36 ut-cursor-pointer ut-items-center ut-justify-center ut-overflow-hidden ut-rounded-md after:ut-transition-[width] after:ut-duration-500\",\n          !ready && \"ut-cursor-not-allowed ut-bg-blue-400\",\n          ready &&\n            isUploading &&\n            `ut-bg-blue-400 after:ut-absolute after:ut-left-0 after:ut-h-full after:ut-bg-blue-600 ${progressHeights[uploadProgress]}`,\n          ready && !isUploading && \"ut-bg-blue-600\",\n        )}\n      >\n        <input\n          className=\"ut-hidden\"\n          type=\"file\"\n          ref={fileInputRef}\n          multiple={multiple}\n          accept={generateMimeTypes(fileTypes ?? [])?.join(\", \")}\n          onChange={(e) => {\n            if (!e.target.files) return;\n            const input = \"input\" in $props ? $props.input : undefined;\n            const files = Array.from(e.target.files);\n            void startUpload(files, input);\n          }}\n          disabled={!ready}\n        />\n        <span className=\"ut-z-10 ut-px-3 ut-py-2 ut-text-white\">\n          {isUploading ? <Spinner /> : getUploadButtonText(fileTypes)}\n        </span>\n      </label>\n      <div className=\"ut-h-[1.25rem]\">\n        {fileTypes && (\n          <p className=\"ut-m-0 ut-text-xs ut-leading-5 ut-text-gray-600\">\n            {allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function UploadDropzone<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as UploadthingComponentProps<TRouter>;\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>();\n\n  const [files, setFiles] = useState<File[]>([]);\n  const onDrop = useCallback((acceptedFiles: FileWithPath[]) => {\n    setFiles(acceptedFiles);\n  }, []);\n\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        setFiles([]);\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n    },\n  );\n\n  const { fileTypes } = generatePermittedFileTypes(permittedFileInfo?.config);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: fileTypes ? generateClientDropzoneAccept(fileTypes) : undefined,\n  });\n\n  const ready = fileTypes.length > 0;\n\n  return (\n    <div\n      className={classNames(\n        \"ut-mt-2 ut-flex ut-justify-center ut-rounded-lg ut-border ut-border-dashed ut-border-gray-900/25 ut-px-6 ut-py-10\",\n        isDragActive ? \"ut-bg-blue-600/10\" : \"\",\n      )}\n    >\n      <div className=\"ut-text-center\" {...getRootProps()}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          className=\"ut-mx-auto ut-block ut-h-12 ut-w-12 ut-align-middle ut-text-gray-400\"\n        >\n          <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M5.5 17a4.5 4.5 0 0 1-1.44-8.765a4.5 4.5 0 0 1 8.302-3.046a3.5 3.5 0 0 1 4.504 4.272A4 4 0 0 1 15 17H5.5Zm3.75-2.75a.75.75 0 0 0 1.5 0V9.66l1.95 2.1a.75.75 0 1 0 1.1-1.02l-3.25-3.5a.75.75 0 0 0-1.1 0l-3.25 3.5a.75.75 0 1 0 1.1 1.02l1.95-2.1v4.59Z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n        <div className=\"ut-mt-4 ut-flex ut-text-sm ut-leading-6 ut-text-gray-600\">\n          <label\n            htmlFor=\"file-upload\"\n            className={classNames(\n              \"ut-relative ut-cursor-pointer ut-font-semibold  focus-within:ut-outline-none focus-within:ut-ring-2 focus-within:ut-ring-blue-600 focus-within:ut-ring-offset-2 hover:ut-text-blue-500\",\n              ready ? \"ut-text-blue-600\" : \"ut-text-gray-500\",\n            )}\n          >\n            <span className=\"ut-flex ut-w-64 ut-items-center ut-justify-center\">\n              {ready ? `Choose files or drag and drop` : `Loading...`}\n            </span>\n            <input\n              className=\"ut-sr-only\"\n              {...getInputProps()}\n              disabled={!ready}\n            />\n          </label>\n        </div>\n        <div className=\"ut-h-[1.25rem]\">\n          <p className=\"ut-m-0 ut-text-xs ut-leading-5 ut-text-gray-600\">\n            {allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n          </p>\n        </div>\n        {files.length > 0 && (\n          <div className=\"ut-mt-4 ut-flex ut-items-center ut-justify-center\">\n            <button\n              className={classNames(\n                \"ut-relative ut-flex ut-h-10 ut-w-36 ut-items-center ut-justify-center ut-overflow-hidden ut-rounded-md after:ut-transition-[width] after:ut-duration-500\",\n                isUploading\n                  ? `ut-bg-blue-400 after:ut-absolute after:ut-left-0 after:ut-h-full after:ut-bg-blue-600 ${progressHeights[uploadProgress]}`\n                  : \"ut-bg-blue-600\",\n              )}\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                if (!files) return;\n\n                const input = \"input\" in $props ? $props.input : undefined;\n                void startUpload(files, input);\n              }}\n            >\n              <span className=\"ut-z-10 ut-px-3 ut-py-2 ut-text-white\">\n                {isUploading ? (\n                  <Spinner />\n                ) : (\n                  `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`\n                )}\n              </span>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function Uploader<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter>,\n) {\n  return (\n    <>\n      <div className=\"ut-flex ut-flex-col ut-items-center ut-justify-center ut-gap-4\">\n        <span className=\"ut-text-center ut-text-4xl ut-font-bold\">\n          {`Upload a file using a button:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadButton<TRouter> {...props} />\n      </div>\n      <div className=\"ut-flex ut-flex-col ut-items-center ut-justify-center ut-gap-4\">\n        <span className=\"ut-text-center ut-text-4xl ut-font-bold\">\n          {`...or using a dropzone:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadDropzone<TRouter> {...props} />\n      </div>\n    </>\n  );\n}\n\nfunction Spinner() {\n  return (\n    <svg\n      className=\"ut-block ut-h-5 ut-w-5 ut-animate-spin ut-align-middle ut-text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n      />\n    </svg>\n  );\n}\n\nexport function generateComponents<TRouter extends FileRouter>() {\n  return {\n    UploadButton: UploadButton<TRouter>,\n    UploadDropzone: UploadDropzone<TRouter>,\n    Uploader: Uploader<TRouter>,\n  };\n}\n"],"mappings":"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","names":["_a","fileTypes"]}